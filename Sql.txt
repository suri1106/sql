<---wareHouse 1-------->
-- Table: public.warehouse

-- DROP TABLE IF EXISTS public.warehouse;

CREATE TABLE IF NOT EXISTS public.warehouse
(
    warehouse_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone NOT NULL DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    updated timestamp without time zone NOT NULL DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    value character varying(16) COLLATE pg_catalog."default" NOT NULL,
    name character varying(250) COLLATE pg_catalog."default" NOT NULL,
    address_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    description character varying(2000) COLLATE pg_catalog."default",
    CONSTRAINT warehouse_key PRIMARY KEY (warehouse_id),
    CONSTRAINT warehouse_value_key UNIQUE (value),
    CONSTRAINT warehouse_addressid_fkey FOREIGN KEY (address_id)
        REFERENCES public.address (address_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT warehouse_createdby_fkey FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT warehouse_updatedby_fkey FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT warehouse_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.warehouse
    OWNER to postgres;

<---Userinfo 2-------->
-- Table: public.userinfo

-- DROP TABLE IF EXISTS public.userinfo;

CREATE TABLE IF NOT EXISTS public.userinfo
(
    userinfo_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    value character varying(4) COLLATE pg_catalog."default",
    name character varying(200) COLLATE pg_catalog."default",
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default",
    CONSTRAINT userinfo_pk PRIMARY KEY (userinfo_id),
    CONSTRAINT userinfo_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.userinfo
    OWNER to postgres;

<---UOm 3-------->
-- Table: public.uom

-- DROP TABLE IF EXISTS public.uom;

CREATE TABLE IF NOT EXISTS public.uom
(
    uom_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character varying(1) COLLATE pg_catalog."default" DEFAULT 'Y'::character varying,
    created timestamp without time zone NOT NULL DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone NOT NULL DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default",
    value character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT uom_pkey PRIMARY KEY (uom_id),
    CONSTRAINT uom_name_key UNIQUE (name),
    CONSTRAINT uom_value_key UNIQUE (value),
    CONSTRAINT uom_createdby_fkey FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT uom_updatedby_fkey FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT uom_isactive_chk CHECK (isactive::text = ANY (ARRAY['Y'::character varying, 'N'::character varying]::text[]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.uom
    OWNER to postgres;

<---transaction 4-------->
-- Table: public.transaction

-- DROP TABLE IF EXISTS public.transaction;

CREATE TABLE IF NOT EXISTS public.transaction
(
    transaction_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Y'::bpchar,
    created timestamp without time zone NOT NULL DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    updated timestamp without time zone NOT NULL DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    product_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    uom_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    storagebin_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    documentdate timestamp without time zone NOT NULL DEFAULT now(),
    quantity numeric NOT NULL,
    type character varying(2) COLLATE pg_catalog."default" NOT NULL,
    "inout" character varying(32) COLLATE pg_catalog."default",
    CONSTRAINT transaction_pkey PRIMARY KEY (transaction_id),
    CONSTRAINT transaction_createdby_fkey FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT transaction_updatedby_fkey FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT transaction_isactive_check CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])),
    CONSTRAINT transaction_type_check CHECK (type::text = ANY (ARRAY['V+'::character varying, 'V-'::character varying]::text[]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.transaction
    OWNER to postgres;


<---storagedetail 5-------->

-- Table: public.storagedetail

-- DROP TABLE IF EXISTS public.storagedetail;

CREATE TABLE IF NOT EXISTS public.storagedetail
(
    storagedetail_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Y'::bpchar,
    created timestamp without time zone NOT NULL DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    updated timestamp without time zone NOT NULL DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    product_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    storagebin_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    uom_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    total_quantity numeric NOT NULL,
    CONSTRAINT storagedetail_pkey PRIMARY KEY (storagedetail_id),
    CONSTRAINT storagedetail_unique UNIQUE (product_id, storagebin_id, uom_id),
    CONSTRAINT storagedetail_createdby_fkey FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT storagedetail_updatedby_fkey FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT storagedetail_isactive_check CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.storagedetail
    OWNER to postgres;


<---storagebin 6-------->
-- Table: public.storagebin

-- DROP TABLE IF EXISTS public.storagebin;

CREATE TABLE IF NOT EXISTS public.storagebin
(
    storagebin_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone NOT NULL DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    updated timestamp without time zone NOT NULL DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    warehouse_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    value character varying(16) COLLATE pg_catalog."default" NOT NULL,
    name character varying(250) COLLATE pg_catalog."default" NOT NULL,
    shelf_number integer NOT NULL,
    row_number integer NOT NULL,
    column_number integer NOT NULL,
    current_capacity integer DEFAULT 0,
    total_capacity integer,
    description character varying(2000) COLLATE pg_catalog."default",
    CONSTRAINT storagebin_key PRIMARY KEY (storagebin_id),
    CONSTRAINT stbin_name_slf_row_col_un UNIQUE (name, shelf_number, row_number, column_number),
    CONSTRAINT storagebin_value_un UNIQUE (value, warehouse_id),
    CONSTRAINT storagebin_createdby_fkey FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT storagebin_updatedby_fkey FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT warehouseid_fkey FOREIGN KEY (warehouse_id)
        REFERENCES public.warehouse (warehouse_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT storagebin_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.storagebin
    OWNER to postgres;


<---region 7-------->
-- Table: public.region

-- DROP TABLE IF EXISTS public.region;

CREATE TABLE IF NOT EXISTS public.region
(
    region_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    value character varying(4) COLLATE pg_catalog."default" NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    country_id character varying(32) COLLATE pg_catalog."default",
    CONSTRAINT region_pk PRIMARY KEY (region_id),
    CONSTRAINT region_countryid_fk FOREIGN KEY (country_id)
        REFERENCES public.country (country_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT region_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT region_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT region_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.region
    OWNER to postgres;


<---productprice 8-------->

-- Table: public.productprice

-- DROP TABLE IF EXISTS public.productprice;

CREATE TABLE IF NOT EXISTS public.productprice
(
    productprice_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default",
    created timestamp without time zone DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default",
    pricelist_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    product_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    uom_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    price numeric,
    CONSTRAINT productprice_pk PRIMARY KEY (productprice_id),
    CONSTRAINT productprice_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT productprice_pricelist_id_fk FOREIGN KEY (pricelist_id)
        REFERENCES public.pricelist (pricelist_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT productprice_product_id_fk FOREIGN KEY (product_id)
        REFERENCES public.product (product_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT productprice_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.productprice
    OWNER to postgres;

<---productcategory 9-------->
-- Table: public.productcategory

-- DROP TABLE IF EXISTS public.productcategory;

CREATE TABLE IF NOT EXISTS public.productcategory
(
    productcategory_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character varying(1) COLLATE pg_catalog."default" DEFAULT 'Y'::character varying,
    created timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedby character varying(32) COLLATE pg_catalog."default",
    value character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(2000) COLLATE pg_catalog."default",
    CONSTRAINT productcategory_pkey PRIMARY KEY (productcategory_id),
    CONSTRAINT productcategory_name_key UNIQUE (name),
    CONSTRAINT productcategory_value_key UNIQUE (value),
    CONSTRAINT productcategory_createdby_fkey FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT productcategory_updatedby_fkey FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT productcategory_isactive_chk CHECK (isactive::text = ANY (ARRAY['Y'::character varying, 'N'::character varying]::text[]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.productcategory
    OWNER to postgres;
<---product 10-------->
-- Table: public.product

-- DROP TABLE IF EXISTS public.product;

CREATE TABLE IF NOT EXISTS public.product
(
    product_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character varying(1) COLLATE pg_catalog."default" DEFAULT 'Y'::character varying,
    created timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedby character varying(32) COLLATE pg_catalog."default",
    type character varying(1) COLLATE pg_catalog."default" NOT NULL DEFAULT 'I'::character varying,
    value character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    uom_id character varying(32) COLLATE pg_catalog."default",
    description character varying(2000) COLLATE pg_catalog."default",
    productcategory_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    totalsales numeric,
    CONSTRAINT product_pkey PRIMARY KEY (product_id),
    CONSTRAINT product_value_key UNIQUE (value),
    CONSTRAINT product_category_fkey FOREIGN KEY (productcategory_id)
        REFERENCES public.productcategory (productcategory_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT product_createdby_fkey FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT product_uom_fkey FOREIGN KEY (uom_id)
        REFERENCES public.uom (uom_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT product_updatedby_fkey FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT product_isactive_chk CHECK (isactive::text = ANY (ARRAY['Y'::character varying, 'N'::character varying]::text[])),
    CONSTRAINT product_type_chk CHECK (type::text = ANY (ARRAY['I'::character varying, 'R'::character varying, 'S'::character varying, 'E'::character varying]::text[]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.product
    OWNER to postgres;
<---pricelist 11-------->
-- Table: public.pricelist

-- DROP TABLE IF EXISTS public.pricelist;

CREATE TABLE IF NOT EXISTS public.pricelist
(
    pricelist_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default",
    created timestamp without time zone NOT NULL DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    updated timestamp without time zone NOT NULL DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    bpartner_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    issales character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT pricelist_pk PRIMARY KEY (pricelist_id),
    CONSTRAINT pricelist_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT pricelist_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT pricelist_issales_check CHECK (issales::text = ANY (ARRAY['Y'::character varying, 'N'::character varying]::text[])),
    CONSTRAINT pricelist_isactive_check CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.pricelist
    OWNER to postgres;
<---invoiceline 12-------->
-- Table: public.invoiceline

-- DROP TABLE IF EXISTS public.invoiceline;

CREATE TABLE IF NOT EXISTS public.invoiceline
(
    invoiceline_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    updated timestamp without time zone DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    invoice_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    product_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    uom_id character varying(32) COLLATE pg_catalog."default",
    quantity numeric,
    unitprice numeric,
    linenetamt numeric DEFAULT 0,
    CONSTRAINT invoiceline_pk PRIMARY KEY (invoiceline_id),
    CONSTRAINT invoiceline_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT invoiceline_invoice_id_fk FOREIGN KEY (invoice_id)
        REFERENCES public.invoice (invoice_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT invoiceline_product_id_fk FOREIGN KEY (product_id)
        REFERENCES public.product (product_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT invoiceline_uom_id_fk FOREIGN KEY (uom_id)
        REFERENCES public.uom (uom_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT invoiceline_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT invoiceline_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.invoiceline
    OWNER to postgres;

-- Trigger: update_product_trg

-- DROP TRIGGER IF EXISTS update_product_trg ON public.invoiceline;

CREATE TRIGGER update_product_trg
    AFTER INSERT
    ON public.invoiceline
    FOR EACH ROW
    EXECUTE FUNCTION public.update_product_trg();
<---invoice 13-------->
-- Table: public.invoice

-- DROP TABLE IF EXISTS public.invoice;

CREATE TABLE IF NOT EXISTS public.invoice
(
    invoice_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    updated timestamp without time zone DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    issotrx character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    c_order_id character varying(32) COLLATE pg_catalog."default",
    bpartner_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    inout_id character varying(32) COLLATE pg_catalog."default",
    documentno character varying(32) COLLATE pg_catalog."default",
    duedate timestamp without time zone,
    docdate timestamp without time zone DEFAULT now(),
    address_id character varying(32) COLLATE pg_catalog."default",
    totalamount numeric,
    processed character(1) COLLATE pg_catalog."default" DEFAULT 'N'::bpchar,
    CONSTRAINT invoice_pk PRIMARY KEY (invoice_id),
    CONSTRAINT invoice_documentno_un UNIQUE (documentno),
    CONSTRAINT invoice_address_id_fk FOREIGN KEY (address_id)
        REFERENCES public.address (address_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT invoice_bpartner_id_fk FOREIGN KEY (bpartner_id)
        REFERENCES public.bpartner (bpartner_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT invoice_c_order_id_fk FOREIGN KEY (c_order_id)
        REFERENCES public.c_order (c_order_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT invoice_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT invoice_inout_id_fk FOREIGN KEY (inout_id)
        REFERENCES public."inout" (inout_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT invoice_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT invoice_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])),
    CONSTRAINT invoice_issotrx_chk CHECK (issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])),
    CONSTRAINT invoice_processed_chk CHECK (processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.invoice
    OWNER to postgres;

-- Trigger: invoice_trg

-- DROP TRIGGER IF EXISTS invoice_trg ON public.invoice;

CREATE TRIGGER invoice_trg
    AFTER UPDATE 
    ON public.invoice
    FOR EACH ROW
    EXECUTE FUNCTION public.invoice_trg();
<---productprice 14-------->
-- Table: public.inoutline

-- DROP TABLE IF EXISTS public.inoutline;

CREATE TABLE IF NOT EXISTS public.inoutline
(
    inoutline_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone NOT NULL DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone NOT NULL DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default",
    inout_id character varying(32) COLLATE pg_catalog."default",
    product_id character varying(32) COLLATE pg_catalog."default",
    uom_id character varying(32) COLLATE pg_catalog."default",
    storagebin_id character varying(32) COLLATE pg_catalog."default",
    quantity numeric(100,0) NOT NULL,
    lineno character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT inoutline_key PRIMARY KEY (inoutline_id),
    CONSTRAINT inout_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT inout_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT inoutline_inout_id_fk FOREIGN KEY (inout_id)
        REFERENCES public."inout" (inout_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT inoutline_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.inoutline
    OWNER to postgres;
<---inout 15-------->
-- Table: public.inout

-- DROP TABLE IF EXISTS public."inout";

CREATE TABLE IF NOT EXISTS public."inout"
(
    inout_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone NOT NULL DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone NOT NULL DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default",
    c_order_id character varying(32) COLLATE pg_catalog."default",
    bpartner_id character varying(32) COLLATE pg_catalog."default",
    documentnumber character varying(40) COLLATE pg_catalog."default" NOT NULL,
    documentdate timestamp without time zone NOT NULL DEFAULT now(),
    description character varying(1000) COLLATE pg_catalog."default",
    issotrx character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    processed character(1) COLLATE pg_catalog."default" DEFAULT 'N'::bpchar,
    CONSTRAINT inout_key PRIMARY KEY (inout_id),
    CONSTRAINT inout_documentnumber_key UNIQUE (documentnumber),
    CONSTRAINT inout_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT inout_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT inout_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])),
    CONSTRAINT inout_issotrx_chk CHECK (issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])),
    CONSTRAINT inout_processed_chk CHECK (processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."inout"
    OWNER to postgres;
<---country 16-------->
-- Table: public.country

-- DROP TABLE IF EXISTS public.country;

CREATE TABLE IF NOT EXISTS public.country
(
    country_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    updated timestamp without time zone DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    value character varying(5) COLLATE pg_catalog."default" NOT NULL,
    capital character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT country_pk PRIMARY KEY (country_id),
    CONSTRAINT country_value_un UNIQUE (value),
    CONSTRAINT country_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT country_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT country_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.country
    OWNER to postgres;
<---contact 17-------->
-- Table: public.contact

-- DROP TABLE IF EXISTS public.contact;

CREATE TABLE IF NOT EXISTS public.contact
(
    contact_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    updated timestamp without time zone DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default" NOT NULL,
    name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    value character varying(4) COLLATE pg_catalog."default" NOT NULL,
    email character varying(200) COLLATE pg_catalog."default" NOT NULL,
    phone_no character varying(32) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT contact_pk PRIMARY KEY (contact_id),
    CONSTRAINT contact_createby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT contact_updateby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT contact_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.contact
    OWNER to postgres;
<---city 18-------->
-- Table: public.city

-- DROP TABLE IF EXISTS public.city;

CREATE TABLE IF NOT EXISTS public.city
(
    city_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default",
    value character varying(5) COLLATE pg_catalog."default" NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    region_id character varying(32) COLLATE pg_catalog."default",
    CONSTRAINT city_pk PRIMARY KEY (city_id),
    CONSTRAINT city_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT city_region_id_fk FOREIGN KEY (region_id)
        REFERENCES public.region (region_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT city_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT city_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.city
    OWNER to postgres;
<---c_orderline 19-------->
-- Table: public.c_orderline

-- DROP TABLE IF EXISTS public.c_orderline;

CREATE TABLE IF NOT EXISTS public.c_orderline
(
    c_orderline_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'N'::bpchar,
    created timestamp without time zone NOT NULL DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone NOT NULL DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default",
    c_order_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    product_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    uom_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    lineno character varying(32) COLLATE pg_catalog."default" NOT NULL,
    quantity character varying(32) COLLATE pg_catalog."default",
    price bigint NOT NULL,
    linenetamt bigint NOT NULL,
    CONSTRAINT c_orderline_pk PRIMARY KEY (c_orderline_id),
    CONSTRAINT c_orderline_c_order_id_fk FOREIGN KEY (c_order_id)
        REFERENCES public.c_order (c_order_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT c_orderline_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT c_orderline_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT c_orderline_isactive_check CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.c_orderline
    OWNER to postgres;
<---c_order 20-------->
-- Table: public.c_order

-- DROP TABLE IF EXISTS public.c_order;

CREATE TABLE IF NOT EXISTS public.c_order
(
    c_order_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'N'::bpchar,
    created timestamp without time zone NOT NULL DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone NOT NULL DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default",
    bpartner_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    documentno character varying(32) COLLATE pg_catalog."default" NOT NULL,
    documentdate character varying(32) COLLATE pg_catalog."default" NOT NULL,
    issotrx character(1) COLLATE pg_catalog."default" DEFAULT 'N'::bpchar,
    totalamount character varying(100) COLLATE pg_catalog."default" NOT NULL,
    processed character(1) COLLATE pg_catalog."default" DEFAULT 'N'::bpchar,
    CONSTRAINT c_order_pk PRIMARY KEY (c_order_id),
    CONSTRAINT c_order_documentno_key UNIQUE (documentno),
    CONSTRAINT c_order_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT c_order_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT c_order_isactive_check CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])),
    CONSTRAINT c_order_issotrx_check CHECK (issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])),
    CONSTRAINT c_order_processed_check CHECK (processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.c_order
    OWNER to postgres;
<---bpartner_category 21-------->
-- Table: public.bpartner_category

-- DROP TABLE IF EXISTS public.bpartner_category;

CREATE TABLE IF NOT EXISTS public.bpartner_category
(
    bpartner_category_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default",
    value character varying(200) COLLATE pg_catalog."default" NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT bpartner_category_key PRIMARY KEY (bpartner_category_id),
    CONSTRAINT bpartner_category_value_key UNIQUE (value),
    CONSTRAINT bpartner_category_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT bpartner_category_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT bpartner_category_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.bpartner_category
    OWNER to postgres;
<---bpartner 22-------->
-- Table: public.bpartner

-- DROP TABLE IF EXISTS public.bpartner;

CREATE TABLE IF NOT EXISTS public.bpartner
(
    bpartner_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default",
    bpartner_category_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    value character varying(200) COLLATE pg_catalog."default" NOT NULL,
    name character varying(70) COLLATE pg_catalog."default" NOT NULL,
    iscustomer character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Y'::bpchar,
    isvendor character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT 'N'::bpchar,
    phoneno character varying(15) COLLATE pg_catalog."default" NOT NULL,
    email character varying(60) COLLATE pg_catalog."default",
    description character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT bpartner_key PRIMARY KEY (bpartner_id),
    CONSTRAINT bpartner_value_key UNIQUE (value),
    CONSTRAINT bpartner_bpartnercategoryid_fk FOREIGN KEY (bpartner_category_id)
        REFERENCES public.bpartner_category (bpartner_category_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT bpartner_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT bpartner_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT bpartner_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])),
    CONSTRAINT bpartner_iscustomer_chk CHECK (iscustomer = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])),
    CONSTRAINT bpartner_isvendor_chk CHECK (isvendor = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.bpartner
    OWNER to postgres;
<---address 23-------->
-- Table: public.address

-- DROP TABLE IF EXISTS public.address;

CREATE TABLE IF NOT EXISTS public.address
(
    address_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    isactive character(1) COLLATE pg_catalog."default" DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby character varying(32) COLLATE pg_catalog."default",
    updated timestamp without time zone DEFAULT now(),
    updatedby character varying(32) COLLATE pg_catalog."default",
    address1 character varying(400) COLLATE pg_catalog."default" NOT NULL,
    address2 character varying(400) COLLATE pg_catalog."default" NOT NULL,
    isprimary character(1) COLLATE pg_catalog."default" DEFAULT 'N'::bpchar,
    city_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    contact_id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    pincode integer NOT NULL,
    CONSTRAINT address_pk PRIMARY KEY (address_id),
    CONSTRAINT address_city_id_fk FOREIGN KEY (city_id)
        REFERENCES public.city (city_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT address_contact_id_fk FOREIGN KEY (contact_id)
        REFERENCES public.contact (contact_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT address_createdby_fk FOREIGN KEY (createdby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT address_updatedby_fk FOREIGN KEY (updatedby)
        REFERENCES public.userinfo (userinfo_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT address_isactive_chk CHECK (isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])),
    CONSTRAINT address_isprimary_chk CHECK (isprimary = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.address
    OWNER to postgres;


